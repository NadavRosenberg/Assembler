****************************************************************************
                                        ממ"ן 14 - פרויקט
****************************************************************************

שם: נדב רוזנברג
תאריך: 22.8.20

הסבר כללי:
בניתי אסמבלר עם 2 מעברים כאשר המעבר הראשון בודק טעויות סמנטיקה ולוגיקה והמעבר השני ממיר את השורות לצורה הרצויה (וממלא את הקבצים החדשים שיצרנו).
לכל אורך הפרויקט השתדלתי לתעד וגם נתתי שמות משמעותיים למשתנים, לפונקציות ולקבצים.

הסבר על הקבצים:
assembler.c עובר על כל הקבצים ובכל פעם מפעיל את המעברים, משחרר זכרון, מוחק קבצים מיותרים ועוד.
firstPass.c מיישם את המעבר הראשון. 
secondPass.c מיישם את המעבר השני. בתחילתו מוגדרים מבני הנתונים שהשתמשתי בהם מכיוון ששום קובץ אחר לא צריך להכיר אותם.
linefunc.c מכיל את השיטות extractor ו - simple_extractor (ועוד שיטות עזר עבורן) אשר מפרקות משפט לתווית, פעולה ואופרנדים. כמו כן הם מחזירים הם היו שגיאות.
utilities.c מכיל את כל השיטות עזר שצריך כולל טיפול במבני הנתונים שהגדרנו.
validation.c מכיל פונקציות לבדיקת תקינות (שם של תווית, מספר אופרנדים ועוד).
prints.c מכיל את השיטה במדפיסה שגיאות ואת השיטה שמדפיסה שורה מפורקת (שורה שעברה את extractor או simple_extractor).
files.c מטפל בכל מה שקשור לקבצים (פתיחתם, סגירתם ועוד).

הסבר על קבצי ה- header:
basic.h מכיל את כל ה - include-ים, define-ים, מבנים שימושיים, משתנים גלובליים וחתימות של פונקציות נפוצות.
advanced.h מכיל פונקציות מורכבות יותר שאינן נדרשות בכל רחבי התוכנית.

דוגמאות הרצה:
הקובץ ps.as זהה לזה הנמצא בחוברת הקורס 
הקובץ comprehensive_examples.as מכיל טעימה מכל דבר שהייתי צריך ליישם (התעלמות מרווחים, תקינות תוויות ועוד).
הקובץ valid_example.as מכיל תוכנית תקנית.
לקבצים ps.as ו - valid_example.as יש את הקבצים עם הסיומות ob, ent, ext שנוצרו באמצעות התוכנית prog.
לקובץ comprehensive_examples.as אין את הקבצים האלו משום שהוא מכיל הרבה שגיאות. לכן צירפתי את הקובץ comprehensive_examples_screenshot שמכיל צילום מסך של השגיאות שהתקבלו ע"י התוכנית prog.
